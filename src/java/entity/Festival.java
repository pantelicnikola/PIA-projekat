package entity;
// Generated Jan 19, 2017 1:02:32 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Festival generated by hbm2java
 */
@Entity
@Table(name="festival"
    ,catalog="festivali"
)
public class Festival  implements java.io.Serializable {


     private Integer idFestival;
     private String name;
     private String place;
     private Date startDate;
     private Date endDate;
     private Double rating;
     private Integer numRatings;
     private String description;
     private Integer viewCount;
     private Integer ticketsSold;
     private Integer singleDay;
     private Integer allDays;
     private Integer ticketsPerReservation;
     private Integer ticketsPerDay;
     private Set<Media> medias = new HashSet<Media>(0);
     private Set<Attendencie> attendencies = new HashSet<Attendencie>(0);
     private Set<Reservation> reservations = new HashSet<Reservation>(0);
     private Set<Link> links = new HashSet<Link>(0);

    public Festival() {
    }

	
    public Festival(String description) {
        this.description = description;
    }
    public Festival(String name, String place, Date startDate, Date endDate, Double rating, Integer numRatings, String description, Integer viewCount, Integer ticketsSold, Integer singleDay, Integer allDays, Integer ticketsPerReservation, Integer ticketsPerDay, Set<Media> medias, Set<Attendencie> attendencies, Set<Reservation> reservations, Set<Link> links) {
       this.name = name;
       this.place = place;
       this.startDate = startDate;
       this.endDate = endDate;
       this.rating = rating;
       this.numRatings = numRatings;
       this.description = description;
       this.viewCount = viewCount;
       this.ticketsSold = ticketsSold;
       this.singleDay = singleDay;
       this.allDays = allDays;
       this.ticketsPerReservation = ticketsPerReservation;
       this.ticketsPerDay = ticketsPerDay;
       this.medias = medias;
       this.attendencies = attendencies;
       this.reservations = reservations;
       this.links = links;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="IdFestival", unique=true, nullable=false)
    public Integer getIdFestival() {
        return this.idFestival;
    }
    
    public void setIdFestival(Integer idFestival) {
        this.idFestival = idFestival;
    }

    
    @Column(name="Name", length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="Place", length=45)
    public String getPlace() {
        return this.place;
    }
    
    public void setPlace(String place) {
        this.place = place;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="StartDate", length=10)
    public Date getStartDate() {
        return this.startDate;
    }
    
    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="EndDate", length=10)
    public Date getEndDate() {
        return this.endDate;
    }
    
    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    
    @Column(name="Rating", precision=22, scale=0)
    public Double getRating() {
        return this.rating;
    }
    
    public void setRating(Double rating) {
        this.rating = rating;
    }

    
    @Column(name="NumRatings")
    public Integer getNumRatings() {
        return this.numRatings;
    }
    
    public void setNumRatings(Integer numRatings) {
        this.numRatings = numRatings;
    }

    
    @Column(name="Description", nullable=false, length=160)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="ViewCount")
    public Integer getViewCount() {
        return this.viewCount;
    }
    
    public void setViewCount(Integer viewCount) {
        this.viewCount = viewCount;
    }

    
    @Column(name="TicketsSold")
    public Integer getTicketsSold() {
        return this.ticketsSold;
    }
    
    public void setTicketsSold(Integer ticketsSold) {
        this.ticketsSold = ticketsSold;
    }

    
    @Column(name="SingleDay")
    public Integer getSingleDay() {
        return this.singleDay;
    }
    
    public void setSingleDay(Integer singleDay) {
        this.singleDay = singleDay;
    }

    
    @Column(name="AllDays")
    public Integer getAllDays() {
        return this.allDays;
    }
    
    public void setAllDays(Integer allDays) {
        this.allDays = allDays;
    }

    
    @Column(name="TicketsPerReservation")
    public Integer getTicketsPerReservation() {
        return this.ticketsPerReservation;
    }
    
    public void setTicketsPerReservation(Integer ticketsPerReservation) {
        this.ticketsPerReservation = ticketsPerReservation;
    }

    
    @Column(name="TicketsPerDay")
    public Integer getTicketsPerDay() {
        return this.ticketsPerDay;
    }
    
    public void setTicketsPerDay(Integer ticketsPerDay) {
        this.ticketsPerDay = ticketsPerDay;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="festival")
    public Set<Media> getMedias() {
        return this.medias;
    }
    
    public void setMedias(Set<Media> medias) {
        this.medias = medias;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="festival")
    public Set<Attendencie> getAttendencies() {
        return this.attendencies;
    }
    
    public void setAttendencies(Set<Attendencie> attendencies) {
        this.attendencies = attendencies;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="festival")
    public Set<Reservation> getReservations() {
        return this.reservations;
    }
    
    public void setReservations(Set<Reservation> reservations) {
        this.reservations = reservations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="festival")
    public Set<Link> getLinks() {
        return this.links;
    }
    
    public void setLinks(Set<Link> links) {
        this.links = links;
    }




}


